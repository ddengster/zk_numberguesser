
const Verifier = artifacts.require("Verifier");

contract("Verifier", (accounts)=> {

  let contractInstance;
  beforeEach(async () => {
    contractInstance = await Verifier.new();
  });

  it("VerifierTrueTest", async () => {
    // Using Verifier generated by build_verifier.bat initiate_game
    
    // Using proof.json generated by
    // compute_witness.bat initiate_game 3 8317554905031743436470060412079836410388093405773061122028896578523632029169 1 5
    let proof = {
      "proof": {
        "a": [
          "0x15f3e7abef87d756c0993e279c67774db0f3adf67ef21f480d7c46f4f425f702",
          "0x035792544c8ab7040369eb18d2af11c9a3b825ec694c87891a26e901235b2855"
        ],
        "b": [
          [
            "0x156aaffdb48c0cccb681286ca9b892590da0fe7aebec1c189cdc2a9e4fd85249",
            "0x21d19ebcfac0191a84438015f4151850d49f04e67a20edad3d4278944c616a73"
          ],
          [
            "0x1c3a8294bebeaa063c7ec4d04b73744ce95d39b64ba882c5495318012780a8a7",
            "0x271e49c008a662468eb7ca007de6718921969b8e496139d766ff354a56a2f9ac"
          ]
        ],
        "c": [
          "0x199d4b96088c63d2628d1b2cef90a2545f353dd3c703e84a250d5629ce9ff848",
          "0x180aee602b4b2122070ad26ed27d76fd156abf264f428aee4ca67f263d841fed"
        ]
      },
      "inputs": [
        "0x126391ba1fce3db355cf8e759492d32ec35a48787f38d2c1ebd8255e4a84cdf1",
        "0x0000000000000000000000000000000000000000000000000000000000000001",
        "0x0000000000000000000000000000000000000000000000000000000000000005",
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      ]
    };

    const result = await contractInstance.verifyTx(proof.proof, proof.inputs);
    assert.equal(result, true);
  });

  it("VerifierTrueTest2", async () => {
    // Using Verifier generated by build_verifier.bat initiate_game
    
    // Using proof.json generated by
    // compute_witness.bat initiate_game 5 14883451070860890180283647447591394114646513402818392007925225473728118499724 1 7
    let proof = {
      "proof": {
        "a": [
          "0x1bf05bbfe48a7f131175fb926aaa6647aa889a5162dc32eb042c739084cce25b",
          "0x2c6b59b7885e037a9c13e2b9c70a5b057c78b5b3a27a696b15412271a4cde218"
        ],
        "b": [
          [
            "0x2fd609caf3451a06e1e4bd9f37a28f42eef106aa84cccc672d610186a02ccf16",
            "0x0e849c48bb485ae8a24e80c55b4819dad308a1ad5eabe59940623ae95fedc3e0"
          ],
          [
            "0x188b8b76507bc55420c6d6a9e3dbe63fd853feb95be99e84d87d51dc3819840a",
            "0x0cacb4e8faba07600d12ca755908c878194e1ed6ef589767920b77db90e1a66c"
          ]
        ],
        "c": [
          "0x16d5d1eca345f7fb9218f03ac4521b1895119d2f12d142fe2a5cd3708fecf4f7",
          "0x28fbfab6914644d5d08945a87e99c181ced45a1eabf9e30a2d301cf64b7121ef"
        ]
      },
      "inputs": [
        "0x20e7bc1a8e0f90f5af6d9ddde8a110c51df01958c669327eef64b9748163a98c",
        "0x0000000000000000000000000000000000000000000000000000000000000001",
        "0x0000000000000000000000000000000000000000000000000000000000000007",
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      ]
    };

    const result = await contractInstance.verifyTx(proof.proof, proof.inputs);
    assert.equal(result, true);
  });

  it("VerifierWrongEvalTest", async () => {
     // Using Verifier generated by build_verifier.bat initiate_game
    
    // Using proof.json generated by
    // compute_witness.bat initiate_game 5 1 1 7
    // witness returns "99", but this routine should still be considered valid
    let proof = {
      "proof": {
        "a": [
          "0x1baa210a49c6580459bda3564ca42bd352c6492ffcd3654b4c7d2a07cf6a82e4",
          "0x29b819cef88ac2706d9302cb5e54cb8ae7f9c80fcaf5e583b6a0965072b4ddb4"
        ],
        "b": [
          [
            "0x17d91e61573161d5b3b91b48828d4d5f525c1225a5c1e3a1f27167389478e6ad",
            "0x2d3589d8756cb2b07b47b367f5fbbc14a3acd1e94ba7da0e0a0c23e064f225a9"
          ],
          [
            "0x160d6d7f4126723c049c273522b44b1a6c2bc32547cc315def3ebdfd8e01929a",
            "0x05d2cdeca090a50f829914573e255c8fbb64110b6b78b7e3d1b4f967ab589fe3"
          ]
        ],
        "c": [
          "0x29ddbb03a84753fa4e0edbddb5c70cb93feaf4737dca04d70ca4841198f1c670",
          "0x2b2a6bea0043035c549c438f46e4e960aa15d9e794d7e95c06779ef9a1f2172d"
        ]
      },
      "inputs": [
        "0x0000000000000000000000000000000000000000000000000000000000000001",
        "0x0000000000000000000000000000000000000000000000000000000000000001",
        "0x0000000000000000000000000000000000000000000000000000000000000007",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    };

    const result = await contractInstance.verifyTx(proof.proof, proof.inputs);
    assert.equal(result, true);
    
  });
});