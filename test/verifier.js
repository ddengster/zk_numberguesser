
const Verifier = artifacts.require("Verifier2");

contract("Verifier2", (accounts)=> {

  let contractInstance;
  beforeEach(async () => {
    contractInstance = await Verifier.new();
  });

  it("VerifierTrueTest", async () => {
    
    // Using proof.json generated by
    // compute_witness.bat initiate_game 3 8317554905031743436470060412079836410388093405773061122028896578523632029169
    let proof = {
      "proof": {
        "a": [
          "0x1da29a846351f8f8b5228be0d7bf053eeb463e90aad35649e86a3dcbb1fad587",
          "0x16e0cfbfc7ce43e0d490f0d755172f7329a62420ff8c653f1885bd5e154e9654"
        ],
        "b": [
          [
            "0x0e0cfc6128af8de50be296b4a3dbdccde820f1459ffe7d24fff108693cf7ef90",
            "0x1782058d9245c0b2e552eba6a87d11900848fa979076bd0b2c2a8f204e462970"
          ],
          [
            "0x2029683b63bbb8abb375734b573f89a07ce12ec1353117b767cb4e249f3f620f",
            "0x26d2a6035bb7ed94c1ab4f2a9fcdae5de09fa5f8b5cd70428e404fcbca0d7e1a"
          ]
        ],
        "c": [
          "0x193498ffa12d3ab5d71bcb2fd32801d7be51c93a8e08ff87b9a7f9f926e3f10c",
          "0x02932bb1d4183081ba8262ad54e1fe944680b66d6fcb1d450fc73e176d6c0419"
        ]
      },
      "inputs": [
        "0x126391ba1fce3db355cf8e759492d32ec35a48787f38d2c1ebd8255e4a84cdf1",
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      ]
    };

    const result = await contractInstance.verifyTx(proof.proof, proof.inputs);
    console.log(result);
    let res = result.toString(); // BigNum type
    console.log(res);
    assert.equal(result, true);
  });

  it("VerifierTrueTest2", async () => {
  });

  it("VerifierWrongWitnessTest", async () => {
    
    
  });
});